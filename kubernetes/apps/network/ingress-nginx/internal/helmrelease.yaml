---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx-internal
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.12.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    fullnameOverride: ingress-nginx-internal
    controller:
      service:
        annotations:
          lbipam.cilium.io/ips: "192.168.1.9"
        externalTrafficPolicy: Cluster
      ingressClassResource:
        name: internal
        default: true
        controllerValue: k8s.io/internal
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["internal"]
      allowSnippetAnnotations: true
      config:
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-real-ip: "true"
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
          "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
          "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3 TLSv1.2
        global-auth-url: "http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx"
        global-auth-method: "GET"
        global-auth-signin: "https://auth.internal.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri"
        global-auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid"
        global-auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
          auth_request_set $auth_cookie $upstream_http_set_cookie;
          add_header Set-Cookie $auth_cookie always;
          auth_request_set $auth_user $upstream_http_x_authentik_username;
          proxy_set_header X-Auth-User $auth_user;
        global-auth-cache-key: "$host$cookie_authentik_session"
        global-auth-cache-duration: "200 202 401 5m"
        global-auth-always-set-cookie: "true"
        no-auth-locations: "/.well-known/acme-challenge"
        location-snippet: |
          if ($host ~ ".*rr\.internal\.stiforr\.com$") {
            set $do_auth "true";
          }
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespaceSelector:
            any: true
      annotations-snippet: |
        nginx.ingress.kubernetes.io/configuration-snippet: |
          if ($host ~ "^.*rr\.internal\.stiforr\.com$") {
            set $auth_url "http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx";
            set $auth_signin "https://auth.internal.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri";
            set $auth_response_headers "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid";
            
            auth_request /auth;
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            add_header Set-Cookie $auth_cookie always;
            
            auth_request_set $auth_user $upstream_http_x_authentik_username;
            proxy_set_header X-Auth-User $auth_user;
            
            error_page 401 = $auth_signin;
            
            location = /auth {
              internal;
              proxy_pass $auth_url;
              
              proxy_pass_request_body off;
              proxy_set_header Content-Length "";
              
              proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
              proxy_set_header X-Original-Method $request_method;
              proxy_set_header X-Forwarded-Host $http_host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-Uri $request_uri;
              proxy_set_header X-Forwarded-For $remote_addr;
              
              proxy_set_header Host $http_host;
              
              proxy_cache_valid 200 10s;
              proxy_cache_key $cookie_authentik_session;
              proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
              proxy_cache_bypass $cookie_authentik_session;
            }
          }
      extraArgs:
        default-ssl-certificate: "network/${SECRET_DOMAIN/./-}-production-tls"
      resources:
        requests:
          cpu: 100m
        limits:
          memory: 500Mi
